[
  {
    "name": "segment anything",
    "url": "https://github.com/storyicon/comfyui_segment_anything",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "storyicon",
      "title": "segment anything",
      "id": "sam",
      "reference": "https://github.com/storyicon/comfyui_segment_anything",
      "files": [
        "https://github.com/storyicon/comfyui_segment_anything"
      ],
      "install_type": "git-clone",
      "description": "Based on GroundingDino and SAM, use semantic strings to segment any element in an image. The comfyui version of sd-webui-segment-anything."
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "ComfyUI's ControlNet Auxiliary Preprocessors",
    "url": "https://github.com/Fannovel16/comfyui_controlnet_aux",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "Fannovel16",
      "title": "ComfyUI's ControlNet Auxiliary Preprocessors",
      "id": "comfyui_controlnet_aux",
      "reference": "https://github.com/Fannovel16/comfyui_controlnet_aux",
      "files": [
        "https://github.com/Fannovel16/comfyui_controlnet_aux"
      ],
      "preemptions": [
        "AIO_Preprocessor",
        "AnimalPosePreprocessor",
        "AnimeFace_SemSegPreprocessor",
        "AnimeLineArtPreprocessor",
        "BAE-NormalMapPreprocessor",
        "BinaryPreprocessor",
        "CannyEdgePreprocessor",
        "ColorPreprocessor",
        "DSINE-NormalMapPreprocessor",
        "DWPreprocessor",
        "DensePosePreprocessor",
        "DepthAnythingPreprocessor",
        "DiffusionEdge_Preprocessor",
        "FacialPartColoringFromPoseKps",
        "FakeScribblePreprocessor",
        "HEDPreprocessor",
        "HintImageEnchance",
        "ImageGenResolutionFromImage",
        "ImageGenResolutionFromLatent",
        "ImageIntensityDetector",
        "ImageLuminanceDetector",
        "InpaintPreprocessor",
        "LeReS-DepthMapPreprocessor",
        "LineArtPreprocessor",
        "LineartStandardPreprocessor",
        "M-LSDPreprocessor",
        "Manga2Anime_LineArt_Preprocessor",
        "MaskOptFlow",
        "MediaPipe-FaceMeshPreprocessor",
        "MeshGraphormer-DepthMapPreprocessor",
        "MiDaS-DepthMapPreprocessor",
        "MiDaS-NormalMapPreprocessor",
        "OneFormer-ADE20K-SemSegPreprocessor",
        "OneFormer-COCO-SemSegPreprocessor",
        "OpenposePreprocessor",
        "PiDiNetPreprocessor",
        "PixelPerfectResolution",
        "SAMPreprocessor",
        "SavePoseKpsAsJsonFile",
        "ScribblePreprocessor",
        "Scribble_XDoG_Preprocessor",
        "SemSegPreprocessor",
        "ShufflePreprocessor",
        "TEEDPreprocessor",
        "TilePreprocessor",
        "UniFormer-SemSegPreprocessor",
        "Unimatch_OptFlowPreprocessor",
        "Zoe-DepthMapPreprocessor",
        "Zoe_DepthAnythingPreprocessor"
      ],
      "install_type": "git-clone",
      "description": "Plug-and-play ComfyUI node sets for making ControlNet hint images."
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "ComfyUI Essentials",
    "url": "https://github.com/cubiq/ComfyUI_essentials",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "cubiq",
      "title": "ComfyUI Essentials",
      "id": "essentials",
      "reference": "https://github.com/cubiq/ComfyUI_essentials",
      "files": [
        "https://github.com/cubiq/ComfyUI_essentials"
      ],
      "install_type": "git-clone",
      "description": "Essential nodes that are weirdly missing from ComfyUI core. With few exceptions they are new features and not commodities. I hope this will be just a temporary repository until the nodes get included into ComfyUI."
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "pythongosssss/ComfyUI-Custom-Scripts",
    "url": "https://github.com/pythongosssss/ComfyUI-Custom-Scripts",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "pythongosssss",
      "title": "pythongosssss/ComfyUI-Custom-Scripts",
      "id": "pygos-script",
      "reference": "https://github.com/pythongosssss/ComfyUI-Custom-Scripts",
      "files": [
        "https://github.com/pythongosssss/ComfyUI-Custom-Scripts"
      ],
      "install_type": "git-clone",
      "description": "This extension provides: Auto Arrange Graph, Workflow SVG, Favicon Status, Image Feed, Latent Upscale By, Lock Nodes & Groups, Lora Subfolders, Preset Text, Show Text, Touch Support, Link Render Mode, Locking, Node Finder, Quick Nodes, Show Image On Menu, Show Text, Workflow Managements, Custom Widget Default Values"
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "ComfyUI-IC-Light",
    "url": "https://github.com/kijai/ComfyUI-IC-Light",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "kijai",
      "title": "ComfyUI-IC-Light",
      "id": "ic-light-kijai",
      "reference": "https://github.com/kijai/ComfyUI-IC-Light",
      "files": [
        "https://github.com/kijai/ComfyUI-IC-Light"
      ],
      "install_type": "git-clone",
      "description": "ComfyUI native nodes for IC-Light"
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "WAS Node Suite",
    "url": "https://github.com/WASasquatch/was-node-suite-comfyui",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "WASasquatch",
      "title": "WAS Node Suite",
      "id": "was",
      "reference": "https://github.com/WASasquatch/was-node-suite-comfyui",
      "pip": [
        "numba"
      ],
      "files": [
        "https://github.com/WASasquatch/was-node-suite-comfyui"
      ],
      "install_type": "git-clone",
      "description": "A node suite for ComfyUI with many new nodes, such as image processing, text processing, and more."
    },
    "nodes": [],
    "pip": [
      "numba"
    ],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "ComfyUI-Image-Filters",
    "url": "https://github.com/spacepxl/ComfyUI-Image-Filters",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "spacepxl",
      "title": "ComfyUI-Image-Filters",
      "id": "image-fitlers",
      "reference": "https://github.com/spacepxl/ComfyUI-Image-Filters",
      "files": [
        "https://github.com/spacepxl/ComfyUI-Image-Filters"
      ],
      "install_type": "git-clone",
      "description": "Image and matte filtering nodes for ComfyUI `image/filters/*`"
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "ComfyUI Layer Style",
    "url": "https://github.com/chflame163/ComfyUI_LayerStyle",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "chflame163",
      "title": "ComfyUI Layer Style",
      "id": "layerstyle",
      "reference": "https://github.com/chflame163/ComfyUI_LayerStyle",
      "files": [
        "https://github.com/chflame163/ComfyUI_LayerStyle"
      ],
      "install_type": "git-clone",
      "description": "A set of nodes for ComfyUI it generate image like Adobe Photoshop's Layer Style. the Drop Shadow is first completed node, and follow-up work is in progress."
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "Character Face Swap",
    "url": "https://github.com/ArtBot2023/CharacterFaceSwap",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "ArtBot2023",
      "title": "Character Face Swap",
      "id": "char-faceswap",
      "reference": "https://github.com/ArtBot2023/CharacterFaceSwap",
      "files": [
        "https://github.com/ArtBot2023/CharacterFaceSwap"
      ],
      "install_type": "git-clone",
      "description": "Character face swap with LoRA and embeddings."
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "ComfyUI_IPAdapter_plus",
    "url": "https://github.com/cubiq/ComfyUI_IPAdapter_plus",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "cubiq",
      "title": "ComfyUI_IPAdapter_plus",
      "id": "ipadapter",
      "reference": "https://github.com/cubiq/ComfyUI_IPAdapter_plus",
      "files": [
        "https://github.com/cubiq/ComfyUI_IPAdapter_plus"
      ],
      "install_type": "git-clone",
      "description": "ComfyUI reference implementation for IPAdapter models. The code is mostly taken from the original IPAdapter repository and laksjdjf's implementation, all credit goes to them. I just made the extension closer to ComfyUI philosophy."
    },
    "nodes": [
      "IPAdapterUnifiedLoader",
      "PrepImageForClipVision",
      "IPAdapterAdvanced"
    ],
    "apt": [],
    "pip": [
      "insightface"
    ],
    "preemptions": [
      "IPAAdapterFaceIDBatch",
      "IPAdapter",
      "IPAdapterAdvanced",
      "IPAdapterBatch",
      "IPAdapterClipVisionEnhancer",
      "IPAdapterClipVisionEnhancerBatch",
      "IPAdapterCombineEmbeds",
      "IPAdapterCombineParams",
      "IPAdapterCombineWeights",
      "IPAdapterEmbeds",
      "IPAdapterEmbedsBatch",
      "IPAdapterEncoder",
      "IPAdapterFaceID",
      "IPAdapterFromParams",
      "IPAdapterInsightFaceLoader",
      "IPAdapterLoadEmbeds",
      "IPAdapterMS",
      "IPAdapterModelLoader",
      "IPAdapterNoise",
      "IPAdapterPreciseComposition",
      "IPAdapterPreciseCompositionBatch",
      "IPAdapterPreciseStyleTransfer",
      "IPAdapterPreciseStyleTransferBatch",
      "IPAdapterPromptScheduleFromWeightsStrategy",
      "IPAdapterRegionalConditioning",
      "IPAdapterSaveEmbeds",
      "IPAdapterStyleComposition",
      "IPAdapterStyleCompositionBatch",
      "IPAdapterTiled",
      "IPAdapterTiledBatch",
      "IPAdapterUnifiedLoader",
      "IPAdapterUnifiedLoaderCommunity",
      "IPAdapterUnifiedLoaderFaceID",
      "IPAdapterWeights",
      "IPAdapterWeightsFromStrategy",
      "PrepImageForClipVision"
    ],
    "cached": "False"
  },
  {
    "name": "ComfyUI-GGUF",
    "url": "https://github.com/city96/ComfyUI-GGUF",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "city96",
      "title": "ComfyUI-GGUF",
      "id": "comfyui-gguf",
      "reference": "https://github.com/city96/ComfyUI-GGUF",
      "files": [
        "https://github.com/city96/ComfyUI-GGUF"
      ],
      "install_type": "git-clone",
      "description": "GGUF Quantization support for native ComfyUI models\nThis is currently very much WIP. These custom nodes provide support for model files stored in the GGUF format popularized by llama.cpp.\nWhile quantization wasn't feasible for regular UNET models (conv2d), transformer/DiT models such as flux seem less affected by quantization. This allows running it in much lower bits per weight variable bitrate quants on low-end GPUs."
    },
    "nodes": [
      "UnetLoaderGGUF",
      "CLIPLoaderGGUF"
    ],
    "apt": [],
    "pip": [],
    "preemptions": [
      "CLIPLoaderGGUF",
      "DualCLIPLoaderGGUF",
      "TripleCLIPLoaderGGUF",
      "UnetLoaderGGUF",
      "UnetLoaderGGUFAdvanced"
    ],
    "cached": "False"
  },
  {
    "name": "ComfyUI-VideoHelperSuite",
    "url": "https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "Kosinkadink",
      "title": "ComfyUI-VideoHelperSuite",
      "id": "vhs",
      "reference": "https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite",
      "files": [
        "https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite"
      ],
      "install_type": "git-clone",
      "description": "Nodes related to video workflows"
    },
    "nodes": [
      "VHS_VideoCombine"
    ],
    "apt": [],
    "pip": [],
    "preemptions": [],
    "cached": "False"
  },
  {
    "name": "cg-use-everywhere",
    "url": "https://github.com/chrisgoringe/cg-use-everywhere",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "Unknown",
      "title": "cg-use-everywhere",
      "files": [
        "https://github.com/chrisgoringe/cg-use-everywhere"
      ],
      "install_type": "git-clone"
    },
    "nodes": "Anything Everywhere3",
    "apt": [],
    "pip": [],
    "preemptions": [],
    "cached": "False"
  },
  {
    "name": "UltimateSDUpscale",
    "url": "https://github.com/ssitu/ComfyUI_UltimateSDUpscale",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "ssitu",
      "title": "UltimateSDUpscale",
      "id": "usdu",
      "reference": "https://github.com/ssitu/ComfyUI_UltimateSDUpscale",
      "files": [
        "https://github.com/ssitu/ComfyUI_UltimateSDUpscale"
      ],
      "install_type": "git-clone",
      "description": "ComfyUI nodes for the Ultimate Stable Diffusion Upscale script by Coyote-A."
    },
    "nodes": [
      "UltimateSDUpscale"
    ],
    "apt": [],
    "pip": [],
    "preemptions": [],
    "cached": "False"
  },
  {
    "name": "Advanced Reflux control",
    "url": "https://github.com/kaibioinfo/ComfyUI_AdvancedRefluxControl",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "Kai Duehrkop",
      "title": "Advanced Reflux control",
      "id": "advancedRefluxControl",
      "reference": "https://github.com/kaibioinfo/ComfyUI_AdvancedRefluxControl",
      "files": [
        "https://github.com/kaibioinfo/ComfyUI_AdvancedRefluxControl"
      ],
      "install_type": "git-clone",
      "description": "This extension offers a new Apply-Style node for Redux that allows for changing the influence of the conditioning image on the final outcome. This effectively allows for changing the style or content of an image using a prompt while using Redux."
    },
    "nodes": [
      "ReduxAdvanced",
      "ReduxAdvanced",
      "ReduxAdvanced"
    ],
    "apt": [],
    "pip": [],
    "preemptions": [],
    "cached": "False"
  },
  {
    "name": "comfyui-reactor-node",
    "url": "https://github.com/Gourieff/ComfyUI-ReActor",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "Gourieff",
      "title": "comfyui-reactor-node",
      "reference": "https://github.com/Gourieff/ComfyUI-ReActor",
      "files": [
        "https://github.com/Gourieff/ComfyUI-ReActor"
      ],
      "install_type": "git-clone",
      "description": "The Fast and Simple Face Swap Extension Node for ComfyUI, based on ReActor SD-WebUI Face Swap Extension"
    },
    "nodes": [
      "ReActorFaceSwap",
      "ReActorLoadFaceModel"
    ],
    "apt": [],
    "pip": [],
    "preemptions": [],
    "cached": "False"
  },
  {
    "name": "FaceSwap",
    "url": "https://github.com/imb101/ComfyUI-FaceSwap",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "imb101",
      "title": "FaceSwap",
      "id": "faceswap",
      "reference": "https://github.com/imb101/ComfyUI-FaceSwap",
      "files": [
        "https://github.com/imb101/ComfyUI-FaceSwap"
      ],
      "install_type": "git-clone",
      "description": "Nodes:FaceSwapNode. Very basic custom node to enable face swapping in ComfyUI. (roop)"
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  }
]